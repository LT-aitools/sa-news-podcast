name: Daily Podcast Generation

on:
  schedule:
    - cron: '30 5 * * *'  # Runs at 5:30 AM UTC daily (7:30 AM SAST)
  workflow_dispatch:  # Allows manual triggering

# Workflow to generate daily podcast episodes and update feed
permissions:
  contents: write

jobs:
  generate-podcast:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Create outputs directory
        run: mkdir -p outputs
        
      - name: Install system dependencies
        run: |
          # Download pre-built FFmpeg binary (much faster than apt install)
          wget -q https://github.com/eugeneware/ffmpeg-static/releases/download/b5.0.1/linux-x64.gz
          gunzip linux-x64.gz
          chmod +x linux-x64
          sudo mv linux-x64 /usr/local/bin/ffmpeg
          ffmpeg -version
        timeout-minutes: 1
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Generate transcript
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
          EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          IMAP_SERVER: ${{ secrets.IMAP_SERVER }}
        run: |
          python summarize_transcript.py
          if [ $? -ne 0 ]; then
            echo "Transcript generation failed"
            exit 1
          fi
          
      - name: Create podcast
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
          AZURE_SPEECH_KEY: ${{ secrets.AZURE_SPEECH_KEY }}
          AZURE_SPEECH_REGION: ${{ secrets.AZURE_SPEECH_REGION }}
          EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          IMAP_SERVER: ${{ secrets.IMAP_SERVER }}
          CLEANUP_SECRET_KEY: ${{ secrets.CLEANUP_SECRET_KEY }}
        run: |
          python podcast_creator.py
          if [ $? -ne 0 ]; then
            echo "Podcast creation failed"
            exit 1
          fi
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install Node dependencies
        run: npm install
        
      - name: Update podcast feed
        run: |
          node api/podcast-feed.js
          if [ $? -ne 0 ]; then
            echo "Feed update failed"
            exit 1
          fi
          
      - name: Cleanup old episodes
        run: |
          node api/cleanup-old-episodes.js
          if [ $? -ne 0 ]; then
            echo "Cleanup failed"
            exit 1
          fi
          
      - name: Commit and push changes
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'
          git add public/
          git add outputs/
          git add api/podcast-feed.js
          git commit -m "Update podcast feed, episodes, and transcripts [skip ci]" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git push 